SECTION
Unit 1: Audio/Image Processing
We will kick off the course by discussing how computers represent audio and images and by doing some fun manipulations of these signals.  This will give us an excuse to start getting familiar with scientific Python, and particularly the <a href = "https://numpy.org/">numpy library</a>.  At this point in the course, we can mostly look at Python as a glorified calculator.  Aside from basic arithmetic operations and plotting, we will dip our toes into writing functions, which will allow us to organize our code better when performing more complex tasks.<h3>Science Topics</h3><ul><li><u>Audio processing</u>: Audio sampling, sinusoids, noise, comb filters, aliasing, the Discrete Fourier Transform, convolution</li><li><u>Image Processing:</u> Salt and papper noise, dithering, Moiré patterns, linear filters, histogram equalization</li></ul><h3>Programming Topics</h3><ul><li>Intro to 1D/2D numpy array manipulations</li><li>Introduction to plotting via matplotlib</li><li>Intro to function writing and usage</li></ul><h3>Libraries Introduced</h3><ul><li><a href = "https://numpy.org/">numpy</a>, <a href = "https://scipy.org/">scipy</a>, <a href = "https://matplotlib.org/">matplotlib</a>, <a href = "https://scikit-image.org/">skimage</a></li></ul><h3>Textbook Reading</h3>Harvey Mudd <i>CS For All</i> <a href = "CSForAll/Ch2.html">Ch. 2</a>

LECTURE
Course Sneak Preview

<ul><li><a href = "https://docs.google.com/presentation/d/1EqGUe0tpxp_O-QZz4-EdqBHUZ3wZ1pZf4JR3Q7f0U5w/edit?usp=sharing">Slides from today</a></li></ul>
LECTURE
Software Environment, Arithmetic Operations, Variable Naming

<ul><li><a href = "Lectures/Week1Class/Week1_Fundamentals.ipynb">Notebook from today</a></li><li><i>CS For All</i> <a href = "CSForAll/Ch2.html#getting-started-in-python">2.2</a></li></ul>
LECTURE
Lists, Slicing, Numpy Arrays / Plotting

<ul><li><i>CS For All</i> <a href = "CSForAll/Ch2.html#more-data-from-numbers-to-strings">2.3</a>, <a href = "CSForAll/Ch2.html#lists">2.4</a></li><li><a href = "https://www.pythoncentral.io/how-to-slice-listsarrays-and-tuples-in-python/">Reference on array slicing</li></ul>
LECTURE
Audio Processing: Sinusoids, Noise, Begin Methods

<ul><li><a href = "Lectures/Week3_Audio">Class Notes on Digital Audio Processing</a></li></ul>
LECTURE
Methods, Echoes/Convolution, Comb Filters

<ul><li><i>CS For All</i> <a href = "CSForAll/Ch2.html#functioning-in-python">2.5</a></li></ul>
LECTURE
The Discrete Fourier Transform, Begin Image Processing

<ul><li><a href = "https://en.wikipedia.org/wiki/Sawtooth_wave">Wikipedia page on sawtooth waves</a></li></ul>
LECTURE
Image Processing: 2D Arrays / Grids, Moiré Patterns, Quantization/Dithering

<ul><li><a href = "https://en.wikipedia.org/wiki/Dither">Wikipedia Page on Dithering</a></li><li><a href = "https://www.youtube.com/watch?v=xAoljeRJ3lU">The design of matplotlib colormaps</a></li></ul>
SECTION
Unit 2: Particle Simulations
In this unit, we will begin to explore some fundamental programming paradigms that will turn our computer into much more than a basic calculator.  In particular, we will study "if/else" statements, which are decisions made at runtime.  We will also begin loops, which will make it much easier to repeat the same code over and over again with minor variations.  Both of these things will allow us to begin exploring some interesting applications, including <a href = "https://en.wikipedia.org/wiki/Fractal">fractal generation</a> and simulations of celestial bodies. <h3>Science Topics</h3><ul><li>Fractals, the n-body problem, flocking simulations, chaos</li></ul><h3>Programming Topics</h3><ul><li>Loops, if statements, parallel arrays</li></ul><h3>Libraries Introduced</h3><ul><li><a href = "https://vpython.org/">vpython</a></li></ul>

LECTURE
Spyder, If Statements

<ul><li><i>CS For All</i> <a href = "CSForAll/Ch2.html#making-decisions">2.6</a></li></ul>
LECTURE
Boolean Statements, Begin Loops

<ul><li><i>CS For All</i> <a href = "CSForAll/Ch5.html#repeated-tasks-loops">5.3</a></li></ul>
LECTURE
While Loops: Epoch Time, The 10 Heads Problem

<ul><li><a href = "https://www.youtube.com/watch?v=n1SJ-Tn3bcQ">Derren Brown 10 Heads Experiment</a></li></ul>
LECTURE
VPython Animations, Euler Steps for Vector Simulations of Gravitation


LECTURE
Continue Gravitational Simulations / VPython, Begin Binary Star Simulation


LECTURE
Finish Binary Star Simulation


LECTURE
Chaos, The Logistic Map


LECTURE
Chaos game representation of a genetic sequence

<ul><li><a href = "https://towardsdatascience.com/chaos-game-representation-of-a-genetic-sequence-4681f1a67e14">Towards Data Science Notes</a></li></ul>
SECTION
Unit 3: Data Wrangling / Data Analysis
In this unit, we will learn how to gather and organize data in Python.  This will include a brief foray into machine learning to discuss learning from examples, also known as <a href = "https://en.wikipedia.org/wiki/Supervised_learning">supervised learning</a>.  We will use this to guess the genre of a clip of music, to figure out the sentiment of a movie review, and to automatically transcribe images of digits.<h3>Science Topics</h3><ul><li>Web scraping, features for natural languages processing</li><li>Audio feature design</li><li>Supervised learning with k-nearest neighbors</li><li>Dimension reduction for visualization</li><li>Ridge regression and logistic regression</li></ul><h3>Programming Concepts</h3><ul><li>File I/O</li><li>Strings, dictionaries</li><li>Practice with functions, loops, and numpy arrays</li><li>Sparse matrices</li></ul><h3>Libraries Introduced</h3><ul><li><a href = "http://librosa.github.io/">librosa</a>, <a href = "https://scikit-learn.org/">scikit-learn</a>, <a href = "https://docs.python.org/2/library/glob.html">glob</a></li></ul>

LECTURE
Python Dictionaries, Pickling, Wrangling Twitter Data

<ul><li>Videos for This Week <ul><li><a href = "https://web.microsoftstream.com/video/ff38746f-89d4-4d85-80c6-dfb3014908e4">Python Dictionaries</a></li></ul></li><li><a href = "https://web.microsoftstream.com/video/f19cb727-2d55-4b6e-a583-4eb9f810cb34">Lecture recording from spring 2020</a></li><li><a href = "https://www.w3schools.com/python/python_dictionaries.asp">w3schools Dictionary Reference</a></li><li><a href = "https://www.geeksforgeeks.org/python-dictionary/">Geeks for Geeks Dictionary Reference</a></li></ul>
LECTURE
Python Dictionaries, Pickling, Wrangling Twitter Data

<ul><li><a href = "https://web.microsoftstream.com/video/a75fa6b9-c972-42b9-8e4d-989dc8e5e197">Lecture recording from spring 2020</a></li></ul>
LECTURE
High Dimensional Data: Pixel Image Embeddings, Audio Features, Dimension Reduction, Multidimensional Scaling

<ul> <li><a href = "https://web.microsoftstream.com/video/baab2a4c-cf34-4fec-a2a6-7fa86cddac44">Lecture recording from spring 2020</a></li><li><a href = "http://www.covers1000.net/GraphDitty/">Graph Ditty</a> Dimension Reduced Music Visualizer</li><li><a href = "https://towardsdatascience.com/image-classification-in-10-minutes-with-mnist-dataset-54c35b77a38d?gi=e44a7bac7a75">MNIST Image Dataset</a></li></ul>
LECTURE
Finish multidimensional scaling, argsort/argmin, dictionaries practice

<ul><li><a href = "https://web.microsoftstream.com/video/1aabba83-1f96-44e3-b8be-615e32a4e4aa">Lecture recording from spring 2020</a></li>
LECTURE
Nearest Neighbors, Digit Classification, Audio Genre Classification

<ul><li><a href = "https://web.microsoftstream.com/video/ac357e3b-da66-4355-a2a0-40ce42ca09bf">Lecture recording from spring 2020</a></li><li><a href = "https://scikit-learn.org/stable/modules/neighbors.html">sklearn nearest neighbors documentation</a></li></ul>
LECTURE
Ridge Regression, Text Vectorization, Sparse Matrices

<ul><li><a href = "https://web.microsoftstream.com/video/84424f26-e395-49fd-b489-19e5769cf2bc">Lecture recording from spring 2020</a></li><li><a href = "https://www.kaggle.com/mohansacharya/graduate-admissions">Graduate Admissions Dataset</a></li><li><a href = "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.RidgeCV.html#sklearn.linear_model.RidgeCV">sklearn ridge regression documentation</a></li></ul>
SECTION
Unit 4: Sequences
In this unit, we will study algorithms that deal with sequences in text and audio.  In doing so, we will solidify our understanding of functions and loops by exploring a class of algorithms known as <i>dynamic programming algorithms</i>, which are algorithms that cleverly reuse computation to run more efficiently.  This will unlock a series of neat applications, including genome similarity search (aka what's my ancestry?) and audio synchronization (i.e. how to we line up two people singing the same song but at different rates?).  After this, we will study <i>Markov Chains</i> and use them to create a program that synthesizes text in a particular style.  As the most complex assignment yet, it will require the notion of a "class" (custom variable type with functions) to organize code effectively.<h3>Science Topics</h3><ul><li>Efficient algorithm design with dynamic programming</li><li>Genetic similarity search strategies</li><li>Sequential probabalistic modeling and sampling</li><li>Audio synchronization</li></ul><h3>Programming Concepts</h3><ul><li>Recursive functions</li><li>Classes and objects</li></ul><h3>Libraries Introduced</h3><ul><a href = "https://github.com/bmcfee/pyrubberband">pyrubberband</a></li></ul>

LECTURE
Recursion, The Dynamic Programming Concept

<ul><li><i>CS For All</i> <a href = "CSForAll/Ch2.html#humans-chimpanzees-and-spell-checkers">2.1</a>, <a href = "CSForAll/Ch2.html#recursion">2.7</a>, <a href = "CSForAll/Ch2.html#recursion-revealed">2.8</a>, <a href = "CSForAll/Ch2.html#recursion-revealed">2.9</a>, <a href = "CSForAll/Ch2.html#use-it-or-lose-it">2.10</a></li><li><a href = "https://web.microsoftstream.com/video/ff420cb0-59be-4f27-8e81-50a56b6e3860">Lecture recording from spring 2020</a></li><li><a href = "https://web.microsoftstream.com/video/35b419f7-91f8-4f3b-b6f0-643d4097d7f8">Followup video on recursion and dynamic programming</li><li><a href = "https://web.microsoftstream.com/video/ae2f2839-fa4c-46ad-a438-8a88524ac652">Looping through lists review</a></li></ul>
LECTURE
Edit Distance

<ul><li>CS For All <a href = "CSForAll/Ch2.html#edit-distance">2.11</a></li><li><a href = "https://web.microsoftstream.com/video/a3078fe5-af47-471c-b2e4-e1a772294821">Lecture video from today</a></li></ul>
LECTURE
Dynamic Programming Solutions To Edit Distance, Needleman-Wunsch

<ul><li><a href = "https://web.microsoftstream.com/video/b9cc6b3b-b16d-48e6-a213-2b36653c82c2">Lecture recording from spring 2020</a></li></ul>
LECTURE
Backtracing Alignment Tables, Dynamic Time Warping for Audio Alignment

<ul><li><a href = "https://web.microsoftstream.com/video/a7813db5-36c7-4915-b495-338a0b992542">Lecture video from today</a></li><li><a href = "../Lectures/Week12Class/DTW2D.html">Live DTW Demo</a></li><li><a href = "../Lectures/Week12Class/sync_bad.mp3">Unsynchronized audio</a></li><li><a href = "../Lectures/Week12Class/sync.mp3">Synchronized with DTW</a></li></ul>
LECTURE
Classes and Objects

<ul><li><a href = "https://web.microsoftstream.com/video/a4ac674e-6b98-4be2-8209-a611791633a3">Lecture Video from Today</a></li></ul>
LECTURE
Markov Chains on Letters

<ul><li><a href = "https://setosa.io/blog/2014/07/26/markov-chains/">Markov Chains Interactive Demo</a></li><li><a href = "https://web.microsoftstream.com/video/12f27885-96cf-43db-9f5d-04101454c128">Lecture recording from spring 2020</a></li></ul>
LECTURE
Markov Chains And N-Grams

<ul><li><a href = "https://web.microsoftstream.com/video/64acc407-2fa1-46c4-b044-ccb8d8ebcc7a">Lecture video from today</a></li></ul>
LECTURE
No class


LECTURE
No class



